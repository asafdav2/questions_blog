<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: C | Interview Bits]]></title>
  <link href="http://interviewbits.herokuapp.com/blog/categories/c/atom.xml" rel="self"/>
  <link href="http://interviewbits.herokuapp.com/"/>
  <updated>2015-02-05T19:11:52+02:00</updated>
  <id>http://interviewbits.herokuapp.com/</id>
  <author>
    <name><![CDATA[Asaf David]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Replace Multiplication, Power and Modulo With Bitwise Operators]]></title>
    <link href="http://interviewbits.herokuapp.com/blog/2015/01/06/replace-multiplication-power-and-modulo-with-bitwise-operators/"/>
    <updated>2015-01-06T07:40:49+02:00</updated>
    <id>http://interviewbits.herokuapp.com/blog/2015/01/06/replace-multiplication-power-and-modulo-with-bitwise-operators</id>
    <content type="html"><![CDATA[<p><strong>Question</strong>: Given the following equation:</p>

<script type="math/tex; mode=display">foo(x) = 6^x + 5x + x \text{ mod } 4</script>

<p>Your task is to fill an array <script type="math/tex">A</script> (with size <script type="math/tex">N</script>) such that <script type="math/tex">A[i] = foo(i)</script>. Your code must not use the multiplication, power or modulo operators.</p>

<!--more-->

<hr />

<p><strong>Solution</strong>: To replace the power operation, we’ll hold a variable <code>a</code> and multiply it by 6 in each iteration. Since we’re not allowed to use the <code>*</code> operator,
we’ll use bitwise operators: left shift of two bits is essentially a multiplication by 4, and we’ll add <code>a</code> to the result twice to get multiplication by 6.
The multiplication by 5 part is very similar. All that remains is to replace the modulo operation. mod by 4 is equal to bitwise AND with 3.</p>

<p>The following is a C solution:</p>

<p>&#8220;` C
    int a = 1;</p>

<pre><code>for (int i = 0; i != N; ++i) {
  A[I] = a + ((i &lt;&lt; 2) + i) + (i &amp; 3);
  a = (a &lt;&lt; 2) + a + a;
} ```
</code></pre>

]]></content>
  </entry>
  
</feed>
